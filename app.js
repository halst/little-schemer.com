// Generated by CoffeeScript 1.4.0
(function() {
  var editor, elements, id, run, toggle_menu;

  id = function(s) {
    return document.getElementById(s);
  };

  editor = CodeMirror.fromTextArea(id('code'), {
    lineNumbers: false,
    mode: 'scheme',
    keyMap: location.hash === '#vi' ? 'vim' : 'default',
    lineWrapping: true,
    autofocus: true,
    showCursorWhenSelecting: true,
    matchBrackets: true
  });

  toggle_menu = function() {
    var menu, toggle;
    menu = id('menu');
    toggle = id('toggle');
    if (toggle.innerHTML === 'menu') {
      menu.style.visibility = 'visible';
      return toggle.innerHTML = 'close';
    } else {
      menu.style.visibility = 'hidden';
      return toggle.innerHTML = 'menu';
    }
  };

  if (localStorage.getItem('editor')) {
    editor.setValue(localStorage.getItem('editor'));
  } else {
    toggle_menu();
  }

  elements = [];

  run = function(editor) {
    var results;
    results = little["eval"](editor.getValue().trimRight());
    return results.forEach(function(_arg) {
      var color, element, line, result;
      line = _arg.line, result = _arg.result;
      element = document.createElement('span');
      color = result.match(/^error/) ? 'brown' : 'green';
      element.style.color = color;
      element.style.textShadow = "0px 0px 50px " + color;
      element.innerText = result;
      element.innerHTML = '&nbsp;&rArr; ' + element.innerHTML;
      editor.addWidget({
        line: line,
        ch: 1000
      }, element);
      return elements.push(element);
    });
  };

  CodeMirror.keyMap["default"]['Shift-Enter'] = run;

  CodeMirror.keyMap.vim['Shift-Enter'] = run;

  editor.on('change', function(editor, change) {
    elements.forEach(function(element) {
      return element.style.left = '-100000px';
    });
    localStorage.setItem('editor', editor.getValue());
    return run(editor);
  });

  run(editor);

  window.app = {
    run: run,
    editor: editor,
    toggle_menu: toggle_menu
  };

}).call(this);
